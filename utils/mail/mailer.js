/**
 * @module mail/mailer
 * @description –û—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥—É–ª—å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email.
 */
import nodemailer from 'nodemailer';
import {
  logMailSendSuccess,
  logMailSendError,
} from '#utils/loggers/mailLoggers.js';

const transporter = nodemailer.createTransport({
  host: 'smtp.gmail.com',
  port: 587,
  secure: false,
  auth: {
    user: process.env.MAIL_USER,
    pass: process.env.MAIL_PASS,
  },
  // pool: true,
  connectionTimeout: 30_000,
  greetingTimeout: 20_000,
  socketTimeout: 45_000,
});

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç email —á–µ—Ä–µ–∑ SMTP
 * @param {Object} params - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã email
 * @param {string} params.to - Email –ø–æ–ª—É—á–∞—Ç–µ–ª—è
 * @param {string} params.subject - –¢–µ–º–∞ –ø–∏—Å—å–º–∞
 * @param {string} [params.text=''] - –¢–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
 * @param {string} params.html - HTML —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
 * @returns {Promise<Object>} –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ç–ø—Ä–∞–≤–∫–µ
 * @throws {Error} –ü—Ä–∏ –æ—à–∏–±–∫–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
 */
export async function sendEmail({ to, subject, text = '', html }) {
  console.log('üöÄ Trying to send email to:', to);
  console.log('üìß MAIL_USER:', process.env.MAIL_USER);
  console.log('üîë MAIL_PASS length:', process.env.MAIL_PASS?.length);
  try {
    const mailOptions = {
      from: 'SharkFlow',
      to,
      subject,
      text,
      html,
    };

    console.log('üì® Sending mail...');

    const info = await new Promise((resolve, reject) => {
      transporter.sendMail(mailOptions, (error, info) => {
        if (error) {
          logMailSendError(error);
          return reject(error);
        }
        logMailSendSuccess(info.messageId);
        resolve(info);
      });
    });

    return info;
  } catch (error) {
    logMailSendError(error);
    throw error;
  }
}

// import { Resend } from 'resend';
// const resend = new Resend(process.env.MAIL_RESEND_API_KEY);

// export async function sendEmail({ to, subject, text = '', html }) {
//   try {
//     const { data, error } = await resend.emails.send({
//       from: 'SharkFlow <onboarding@resend.dev>',
//       to,
//       subject,
//       text,
//       html,
//     });

//     if (error) {
//       logError('Resend error:', error);
//       throw new Error(error.message);
//     } else {
//       logInfo('Email sent via Resend:', data?.id);
//     }
//   } catch (err) {
//     logError('Resend fatal error:', err);
//     throw err;
//   }
// }
